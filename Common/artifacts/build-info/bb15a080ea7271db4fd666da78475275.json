{
	"id": "bb15a080ea7271db4fd666da78475275",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Common/StratManager.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract StratManager is Ownable, Pausable {\n    /**\n     * @dev Contracts:\n     * {keeper} - Address to manage a few lower risk features of the strat\n     * {strategist} - Address of the strategy author/deployer where strategist fee will go.\n     * {vault} - Address of the vault that controls the strategy's funds.\n     * {unirouter} - Address of exchange to execute swaps.\n     */\n    address public keeper;\n    address public strategist;\n    address public unirouter;\n    address public vault;\n    address public feeBatchRecipient;\n\n    /**\n     * @dev Initializes the base strategy.\n     * @param _keeper address to use as alternative owner.\n     * @param _strategist address where strategist fees go.\n     * @param _unirouter router to use for swaps\n     * @param _vault address of parent vault.\n     * @param _feeBatchRecipient address where to send platform fees.\n     */\n    constructor(\n        address _keeper,\n        address _strategist,\n        address _unirouter,\n        address _vault,\n        address _feeBatchRecipient\n    ) {\n        keeper = _keeper;\n        strategist = _strategist;\n        unirouter = _unirouter;\n        vault = _vault;\n        feeBatchRecipient = _feeBatchRecipient;\n    }\n\n    // checks that caller is either owner or keeper.\n    modifier onlyManager() {\n        require(msg.sender == owner() || msg.sender == keeper, \"!manager\");\n        _;\n    }\n\n    /**\n     * @dev Updates address of the strat keeper.\n     * @param _keeper new keeper address.\n     */\n    function setKeeper(address _keeper) external onlyManager {\n        keeper = _keeper;\n    }\n\n    /**\n     * @dev Updates address where strategist fee earnings will go.\n     * @param _strategist new strategist address.\n     */\n    function setStrategist(address _strategist) external {\n        require(msg.sender == strategist, \"!strategist\");\n        strategist = _strategist;\n    }\n\n    /**\n     * @dev Updates router that will be used for swaps.\n     * @param _unirouter new unirouter address.\n     */\n    function setUnirouter(address _unirouter) external onlyOwner {\n        unirouter = _unirouter;\n    }\n\n    /**\n     * @dev Updates parent vault.\n     * @param _vault new vault address.\n     */\n    function setVault(address _vault) external onlyOwner {\n        vault = _vault;\n    }\n\n    /**\n     * @dev Updates beefy fee recipient.\n     * @param _feeBatchRecipient new platform fee recipient address.\n     */\n    function setFeeBatchRecipient(address _feeBatchRecipient) external onlyOwner {\n        feeBatchRecipient = _feeBatchRecipient;\n    }\n\n    /**\n     * @dev Function to synchronize balances before new user deposit.\n     * Can be overridden in the strategy.\n     */\n    function beforeDeposit() external virtual {}\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Common/StratManager.sol": {
				"StratManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_keeper",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_strategist",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_unirouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeBatchRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beforeDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeBatchRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "keeper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeBatchRecipient",
									"type": "address"
								}
							],
							"name": "setFeeBatchRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_keeper",
									"type": "address"
								}
							],
							"name": "setKeeper",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategist",
									"type": "address"
								}
							],
							"name": "setStrategist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_unirouter",
									"type": "address"
								}
							],
							"name": "setUnirouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								}
							],
							"name": "setVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strategist",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unirouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"beforeDeposit()": {
								"details": "Function to synchronize balances before new user deposit. Can be overridden in the strategy."
							},
							"constructor": {
								"details": "Initializes the base strategy.",
								"params": {
									"_feeBatchRecipient": "address where to send platform fees.",
									"_keeper": "address to use as alternative owner.",
									"_strategist": "address where strategist fees go.",
									"_unirouter": "router to use for swaps",
									"_vault": "address of parent vault."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setFeeBatchRecipient(address)": {
								"details": "Updates beefy fee recipient.",
								"params": {
									"_feeBatchRecipient": "new platform fee recipient address."
								}
							},
							"setKeeper(address)": {
								"details": "Updates address of the strat keeper.",
								"params": {
									"_keeper": "new keeper address."
								}
							},
							"setStrategist(address)": {
								"details": "Updates address where strategist fee earnings will go.",
								"params": {
									"_strategist": "new strategist address."
								}
							},
							"setUnirouter(address)": {
								"details": "Updates router that will be used for swaps.",
								"params": {
									"_unirouter": "new unirouter address."
								}
							},
							"setVault(address)": {
								"details": "Updates parent vault.",
								"params": {
									"_vault": "new vault address."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"keeper": {
								"details": "Contracts: {keeper} - Address to manage a few lower risk features of the strat {strategist} - Address of the strategy author/deployer where strategist fee will go. {vault} - Address of the vault that controls the strategy's funds. {unirouter} - Address of exchange to execute swaps."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Common/StratManager.sol\":174:2909  contract StratManager is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"Common/StratManager.sol\":1058:1389  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1237:1244  _keeper */\n  dup5\n    /* \"Common/StratManager.sol\":1228:1234  keeper */\n  0x01\n  0x00\n    /* \"Common/StratManager.sol\":1228:1244  keeper = _keeper */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1267:1278  _strategist */\n  dup4\n    /* \"Common/StratManager.sol\":1254:1264  strategist */\n  0x02\n  0x00\n    /* \"Common/StratManager.sol\":1254:1278  strategist = _strategist */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1300:1310  _unirouter */\n  dup3\n    /* \"Common/StratManager.sol\":1288:1297  unirouter */\n  0x03\n  0x00\n    /* \"Common/StratManager.sol\":1288:1310  unirouter = _unirouter */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1328:1334  _vault */\n  dup2\n    /* \"Common/StratManager.sol\":1320:1325  vault */\n  0x04\n  0x00\n    /* \"Common/StratManager.sol\":1320:1334  vault = _vault */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1364:1382  _feeBatchRecipient */\n  dup1\n    /* \"Common/StratManager.sol\":1344:1361  feeBatchRecipient */\n  0x05\n  0x00\n    /* \"Common/StratManager.sol\":1344:1382  feeBatchRecipient = _feeBatchRecipient */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Common/StratManager.sol\":1058:1389  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Common/StratManager.sol\":174:2909  contract StratManager is Ownable, Pausable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:1133   */\ntag_3:\n    /* \"#utility.yul\":262:268   */\n  0x00\n    /* \"#utility.yul\":270:276   */\n  dup1\n    /* \"#utility.yul\":278:284   */\n  0x00\n    /* \"#utility.yul\":286:292   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  0x00\n    /* \"#utility.yul\":343:346   */\n  0xa0\n    /* \"#utility.yul\":331:340   */\n  dup7\n    /* \"#utility.yul\":322:329   */\n  dup9\n    /* \"#utility.yul\":318:341   */\n  sub\n    /* \"#utility.yul\":314:347   */\n  slt\n    /* \"#utility.yul\":311:431   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":350:429   */\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":311:431   */\ntag_23:\n    /* \"#utility.yul\":470:471   */\n  0x00\n    /* \"#utility.yul\":495:559   */\n  tag_26\n    /* \"#utility.yul\":551:558   */\n  dup9\n    /* \"#utility.yul\":542:548   */\n  dup3\n    /* \"#utility.yul\":531:540   */\n  dup10\n    /* \"#utility.yul\":527:549   */\n  add\n    /* \"#utility.yul\":495:559   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":485:559   */\n  swap6\n  pop\n    /* \"#utility.yul\":441:569   */\n  pop\n    /* \"#utility.yul\":608:610   */\n  0x20\n    /* \"#utility.yul\":634:698   */\n  tag_27\n    /* \"#utility.yul\":690:697   */\n  dup9\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":670:679   */\n  dup10\n    /* \"#utility.yul\":666:688   */\n  add\n    /* \"#utility.yul\":634:698   */\n  tag_18\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":624:698   */\n  swap5\n  pop\n    /* \"#utility.yul\":579:708   */\n  pop\n    /* \"#utility.yul\":747:749   */\n  0x40\n    /* \"#utility.yul\":773:837   */\n  tag_28\n    /* \"#utility.yul\":829:836   */\n  dup9\n    /* \"#utility.yul\":820:826   */\n  dup3\n    /* \"#utility.yul\":809:818   */\n  dup10\n    /* \"#utility.yul\":805:827   */\n  add\n    /* \"#utility.yul\":773:837   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":763:837   */\n  swap4\n  pop\n    /* \"#utility.yul\":718:847   */\n  pop\n    /* \"#utility.yul\":886:888   */\n  0x60\n    /* \"#utility.yul\":912:976   */\n  tag_29\n    /* \"#utility.yul\":968:975   */\n  dup9\n    /* \"#utility.yul\":959:965   */\n  dup3\n    /* \"#utility.yul\":948:957   */\n  dup10\n    /* \"#utility.yul\":944:966   */\n  add\n    /* \"#utility.yul\":912:976   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":902:976   */\n  swap3\n  pop\n    /* \"#utility.yul\":857:986   */\n  pop\n    /* \"#utility.yul\":1025:1028   */\n  0x80\n    /* \"#utility.yul\":1052:1116   */\n  tag_30\n    /* \"#utility.yul\":1108:1115   */\n  dup9\n    /* \"#utility.yul\":1099:1105   */\n  dup3\n    /* \"#utility.yul\":1088:1097   */\n  dup10\n    /* \"#utility.yul\":1084:1106   */\n  add\n    /* \"#utility.yul\":1052:1116   */\n  tag_18\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1042:1116   */\n  swap2\n  pop\n    /* \"#utility.yul\":996:1126   */\n  pop\n    /* \"#utility.yul\":156:1133   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1220:1316   */\ntag_33:\n    /* \"#utility.yul\":1257:1264   */\n  0x00\n    /* \"#utility.yul\":1286:1310   */\n  tag_35\n    /* \"#utility.yul\":1304:1309   */\n  dup3\n    /* \"#utility.yul\":1286:1310   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1275:1310   */\n  swap1\n  pop\n    /* \"#utility.yul\":1220:1316   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1322:1448   */\ntag_36:\n    /* \"#utility.yul\":1359:1366   */\n  0x00\n    /* \"#utility.yul\":1399:1441   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1392:1397   */\n  dup3\n    /* \"#utility.yul\":1388:1442   */\n  and\n    /* \"#utility.yul\":1377:1442   */\n  swap1\n  pop\n    /* \"#utility.yul\":1322:1448   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1577:1694   */\ntag_25:\n    /* \"#utility.yul\":1686:1687   */\n  0x00\n    /* \"#utility.yul\":1683:1684   */\n  dup1\n    /* \"#utility.yul\":1676:1688   */\n  revert\n    /* \"#utility.yul\":1700:1822   */\ntag_21:\n    /* \"#utility.yul\":1773:1797   */\n  tag_42\n    /* \"#utility.yul\":1791:1796   */\n  dup2\n    /* \"#utility.yul\":1773:1797   */\n  tag_33\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1766:1771   */\n  dup2\n    /* \"#utility.yul\":1763:1798   */\n  eq\n    /* \"#utility.yul\":1753:1816   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1812:1813   */\n  0x00\n    /* \"#utility.yul\":1809:1810   */\n  dup1\n    /* \"#utility.yul\":1802:1814   */\n  revert\n    /* \"#utility.yul\":1753:1816   */\ntag_43:\n    /* \"#utility.yul\":1700:1822   */\n  pop\n  jump\t// out\n    /* \"Common/StratManager.sol\":174:2909  contract StratManager is Ownable, Pausable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Common/StratManager.sol\":174:2909  contract StratManager is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc7b9d530\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc7b9d530\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd92f3d73\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x748747e6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaced1661\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x257ae0de\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x257ae0de\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x573fef0a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6817031b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x182b102f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fe4a686\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2358af54\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Common/StratManager.sol\":2597:2729  function setFeeBatchRecipient(address _feeBatchRecipient) external onlyOwner {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Common/StratManager.sol\":589:614  address public strategist */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":676:708  address public feeBatchRecipient */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":620:644  address public unirouter */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":2863:2907  function beforeDeposit() external virtual {} */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":2381:2465  function setVault(address _vault) external onlyOwner {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Common/StratManager.sol\":1678:1768  function setKeeper(address _keeper) external onlyManager {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":562:583  address public keeper */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":1907:2059  function setStrategist(address _strategist) external {... */\n    tag_14:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"Common/StratManager.sol\":2185:2285  function setUnirouter(address _unirouter) external onlyOwner {... */\n    tag_15:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Common/StratManager.sol\":650:670  address public vault */\n    tag_17:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Common/StratManager.sol\":2597:2729  function setFeeBatchRecipient(address _feeBatchRecipient) external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_68:\n        /* \"Common/StratManager.sol\":2704:2722  _feeBatchRecipient */\n      dup1\n        /* \"Common/StratManager.sol\":2684:2701  feeBatchRecipient */\n      0x05\n      0x00\n        /* \"Common/StratManager.sol\":2684:2722  feeBatchRecipient = _feeBatchRecipient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Common/StratManager.sol\":2597:2729  function setFeeBatchRecipient(address _feeBatchRecipient) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Common/StratManager.sol\":589:614  address public strategist */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common/StratManager.sol\":676:708  address public feeBatchRecipient */\n    tag_30:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common/StratManager.sol\":620:644  address public unirouter */\n    tag_33:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common/StratManager.sol\":2863:2907  function beforeDeposit() external virtual {} */\n    tag_36:\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Common/StratManager.sol\":2381:2465  function setVault(address _vault) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"Common/StratManager.sol\":2452:2458  _vault */\n      dup1\n        /* \"Common/StratManager.sol\":2444:2449  vault */\n      0x04\n      0x00\n        /* \"Common/StratManager.sol\":2444:2458  vault = _vault */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Common/StratManager.sol\":2381:2465  function setVault(address _vault) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Common/StratManager.sol\":1678:1768  function setKeeper(address _keeper) external onlyManager {... */\n    tag_48:\n        /* \"Common/StratManager.sol\":1503:1510  owner() */\n      tag_82\n        /* \"Common/StratManager.sol\":1503:1508  owner */\n      tag_50\n        /* \"Common/StratManager.sol\":1503:1510  owner() */\n      jump\t// in\n    tag_82:\n        /* \"Common/StratManager.sol\":1489:1510  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common/StratManager.sol\":1489:1499  msg.sender */\n      caller\n        /* \"Common/StratManager.sol\":1489:1510  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Common/StratManager.sol\":1489:1534  msg.sender == owner() || msg.sender == keeper */\n      dup1\n      tag_83\n      jumpi\n      pop\n        /* \"Common/StratManager.sol\":1528:1534  keeper */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common/StratManager.sol\":1514:1534  msg.sender == keeper */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common/StratManager.sol\":1514:1524  msg.sender */\n      caller\n        /* \"Common/StratManager.sol\":1514:1534  msg.sender == keeper */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Common/StratManager.sol\":1489:1534  msg.sender == owner() || msg.sender == keeper */\n    tag_83:\n        /* \"Common/StratManager.sol\":1481:1547  require(msg.sender == owner() || msg.sender == keeper, \"!manager\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"Common/StratManager.sol\":1754:1761  _keeper */\n      dup1\n        /* \"Common/StratManager.sol\":1745:1751  keeper */\n      0x01\n      0x00\n        /* \"Common/StratManager.sol\":1745:1761  keeper = _keeper */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Common/StratManager.sol\":1678:1768  function setKeeper(address _keeper) external onlyManager {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Common/StratManager.sol\":562:583  address public keeper */\n    tag_53:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Common/StratManager.sol\":1907:2059  function setStrategist(address _strategist) external {... */\n    tag_57:\n        /* \"Common/StratManager.sol\":1992:2002  strategist */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common/StratManager.sol\":1978:2002  msg.sender == strategist */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Common/StratManager.sol\":1978:1988  msg.sender */\n      caller\n        /* \"Common/StratManager.sol\":1978:2002  msg.sender == strategist */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Common/StratManager.sol\":1970:2018  require(msg.sender == strategist, \"!strategist\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"Common/StratManager.sol\":2041:2052  _strategist */\n      dup1\n        /* \"Common/StratManager.sol\":2028:2038  strategist */\n      0x02\n      0x00\n        /* \"Common/StratManager.sol\":2028:2052  strategist = _strategist */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Common/StratManager.sol\":1907:2059  function setStrategist(address _strategist) external {... */\n      pop\n      jump\t// out\n        /* \"Common/StratManager.sol\":2185:2285  function setUnirouter(address _unirouter) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"Common/StratManager.sol\":2268:2278  _unirouter */\n      dup1\n        /* \"Common/StratManager.sol\":2256:2265  unirouter */\n      0x03\n      0x00\n        /* \"Common/StratManager.sol\":2256:2278  unirouter = _unirouter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Common/StratManager.sol\":2185:2285  function setUnirouter(address _unirouter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Common/StratManager.sol\":650:670  address public vault */\n    tag_65:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_113:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_115\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_23:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":228:347   */\n    tag_118:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_121\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_113\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_122:\n        /* \"#utility.yul\":574:598   */\n      tag_124\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:720   */\n    tag_126:\n        /* \"#utility.yul\":692:713   */\n      tag_128\n        /* \"#utility.yul\":707:712   */\n      dup2\n        /* \"#utility.yul\":692:713   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":687:690   */\n      dup3\n        /* \"#utility.yul\":680:714   */\n      mstore\n        /* \"#utility.yul\":611:720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1092   */\n    tag_130:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":889:956   */\n      tag_132\n        /* \"#utility.yul\":953:955   */\n      0x0b\n        /* \"#utility.yul\":948:951   */\n      dup4\n        /* \"#utility.yul\":889:956   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":882:956   */\n      swap2\n      pop\n        /* \"#utility.yul\":965:1058   */\n      tag_134\n        /* \"#utility.yul\":1054:1057   */\n      dup3\n        /* \"#utility.yul\":965:1058   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1083:1085   */\n      0x20\n        /* \"#utility.yul\":1078:1081   */\n      dup3\n        /* \"#utility.yul\":1074:1086   */\n      add\n        /* \"#utility.yul\":1067:1086   */\n      swap1\n      pop\n        /* \"#utility.yul\":726:1092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1464   */\n    tag_136:\n        /* \"#utility.yul\":1240:1243   */\n      0x00\n        /* \"#utility.yul\":1261:1328   */\n      tag_138\n        /* \"#utility.yul\":1325:1327   */\n      0x26\n        /* \"#utility.yul\":1320:1323   */\n      dup4\n        /* \"#utility.yul\":1261:1328   */\n      tag_133\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1254:1328   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1430   */\n      tag_139\n        /* \"#utility.yul\":1426:1429   */\n      dup3\n        /* \"#utility.yul\":1337:1430   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1455:1457   */\n      0x40\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1446:1458   */\n      add\n        /* \"#utility.yul\":1439:1458   */\n      swap1\n      pop\n        /* \"#utility.yul\":1098:1464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1836   */\n    tag_141:\n        /* \"#utility.yul\":1612:1615   */\n      0x00\n        /* \"#utility.yul\":1633:1700   */\n      tag_143\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"#utility.yul\":1692:1695   */\n      dup4\n        /* \"#utility.yul\":1633:1700   */\n      tag_133\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1626:1700   */\n      swap2\n      pop\n        /* \"#utility.yul\":1709:1802   */\n      tag_144\n        /* \"#utility.yul\":1798:1801   */\n      dup3\n        /* \"#utility.yul\":1709:1802   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1827:1829   */\n      0x20\n        /* \"#utility.yul\":1822:1825   */\n      dup3\n        /* \"#utility.yul\":1818:1830   */\n      add\n        /* \"#utility.yul\":1811:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1470:1836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1842:2207   */\n    tag_146:\n        /* \"#utility.yul\":1984:1987   */\n      0x00\n        /* \"#utility.yul\":2005:2071   */\n      tag_148\n        /* \"#utility.yul\":2069:2070   */\n      0x08\n        /* \"#utility.yul\":2064:2067   */\n      dup4\n        /* \"#utility.yul\":2005:2071   */\n      tag_133\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1998:2071   */\n      swap2\n      pop\n        /* \"#utility.yul\":2080:2173   */\n      tag_149\n        /* \"#utility.yul\":2169:2172   */\n      dup3\n        /* \"#utility.yul\":2080:2173   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2198:2200   */\n      0x20\n        /* \"#utility.yul\":2193:2196   */\n      dup3\n        /* \"#utility.yul\":2189:2201   */\n      add\n        /* \"#utility.yul\":2182:2201   */\n      swap1\n      pop\n        /* \"#utility.yul\":1842:2207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2213:2435   */\n    tag_28:\n        /* \"#utility.yul\":2306:2310   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2333:2342   */\n      dup3\n        /* \"#utility.yul\":2329:2347   */\n      add\n        /* \"#utility.yul\":2321:2347   */\n      swap1\n      pop\n        /* \"#utility.yul\":2357:2428   */\n      tag_152\n        /* \"#utility.yul\":2425:2426   */\n      0x00\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2410:2427   */\n      add\n        /* \"#utility.yul\":2401:2407   */\n      dup5\n        /* \"#utility.yul\":2357:2428   */\n      tag_122\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2213:2435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2441:2651   */\n    tag_40:\n        /* \"#utility.yul\":2528:2532   */\n      0x00\n        /* \"#utility.yul\":2566:2568   */\n      0x20\n        /* \"#utility.yul\":2555:2564   */\n      dup3\n        /* \"#utility.yul\":2551:2569   */\n      add\n        /* \"#utility.yul\":2543:2569   */\n      swap1\n      pop\n        /* \"#utility.yul\":2579:2644   */\n      tag_154\n        /* \"#utility.yul\":2641:2642   */\n      0x00\n        /* \"#utility.yul\":2630:2639   */\n      dup4\n        /* \"#utility.yul\":2626:2643   */\n      add\n        /* \"#utility.yul\":2617:2623   */\n      dup5\n        /* \"#utility.yul\":2579:2644   */\n      tag_126\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2441:2651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2657:3076   */\n    tag_92:\n        /* \"#utility.yul\":2823:2827   */\n      0x00\n        /* \"#utility.yul\":2861:2863   */\n      0x20\n        /* \"#utility.yul\":2850:2859   */\n      dup3\n        /* \"#utility.yul\":2846:2864   */\n      add\n        /* \"#utility.yul\":2838:2864   */\n      swap1\n      pop\n        /* \"#utility.yul\":2910:2919   */\n      dup2\n        /* \"#utility.yul\":2904:2908   */\n      dup2\n        /* \"#utility.yul\":2900:2920   */\n      sub\n        /* \"#utility.yul\":2896:2897   */\n      0x00\n        /* \"#utility.yul\":2885:2894   */\n      dup4\n        /* \"#utility.yul\":2881:2898   */\n      add\n        /* \"#utility.yul\":2874:2921   */\n      mstore\n        /* \"#utility.yul\":2938:3069   */\n      tag_156\n        /* \"#utility.yul\":3064:3068   */\n      dup2\n        /* \"#utility.yul\":2938:3069   */\n      tag_130\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2930:3069   */\n      swap1\n      pop\n        /* \"#utility.yul\":2657:3076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3082:3501   */\n    tag_101:\n        /* \"#utility.yul\":3248:3252   */\n      0x00\n        /* \"#utility.yul\":3286:3288   */\n      0x20\n        /* \"#utility.yul\":3275:3284   */\n      dup3\n        /* \"#utility.yul\":3271:3289   */\n      add\n        /* \"#utility.yul\":3263:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3335:3344   */\n      dup2\n        /* \"#utility.yul\":3329:3333   */\n      dup2\n        /* \"#utility.yul\":3325:3345   */\n      sub\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3310:3319   */\n      dup4\n        /* \"#utility.yul\":3306:3323   */\n      add\n        /* \"#utility.yul\":3299:3346   */\n      mstore\n        /* \"#utility.yul\":3363:3494   */\n      tag_158\n        /* \"#utility.yul\":3489:3493   */\n      dup2\n        /* \"#utility.yul\":3363:3494   */\n      tag_136\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3355:3494   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3926   */\n    tag_109:\n        /* \"#utility.yul\":3673:3677   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3700:3709   */\n      dup3\n        /* \"#utility.yul\":3696:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3760:3769   */\n      dup2\n        /* \"#utility.yul\":3754:3758   */\n      dup2\n        /* \"#utility.yul\":3750:3770   */\n      sub\n        /* \"#utility.yul\":3746:3747   */\n      0x00\n        /* \"#utility.yul\":3735:3744   */\n      dup4\n        /* \"#utility.yul\":3731:3748   */\n      add\n        /* \"#utility.yul\":3724:3771   */\n      mstore\n        /* \"#utility.yul\":3788:3919   */\n      tag_160\n        /* \"#utility.yul\":3914:3918   */\n      dup2\n        /* \"#utility.yul\":3788:3919   */\n      tag_141\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3780:3919   */\n      swap1\n      pop\n        /* \"#utility.yul\":3507:3926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4351   */\n    tag_86:\n        /* \"#utility.yul\":4098:4102   */\n      0x00\n        /* \"#utility.yul\":4136:4138   */\n      0x20\n        /* \"#utility.yul\":4125:4134   */\n      dup3\n        /* \"#utility.yul\":4121:4139   */\n      add\n        /* \"#utility.yul\":4113:4139   */\n      swap1\n      pop\n        /* \"#utility.yul\":4185:4194   */\n      dup2\n        /* \"#utility.yul\":4179:4183   */\n      dup2\n        /* \"#utility.yul\":4175:4195   */\n      sub\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4160:4169   */\n      dup4\n        /* \"#utility.yul\":4156:4173   */\n      add\n        /* \"#utility.yul\":4149:4196   */\n      mstore\n        /* \"#utility.yul\":4213:4344   */\n      tag_162\n        /* \"#utility.yul\":4339:4343   */\n      dup2\n        /* \"#utility.yul\":4213:4344   */\n      tag_146\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4205:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4607   */\n    tag_133:\n        /* \"#utility.yul\":4522:4533   */\n      0x00\n        /* \"#utility.yul\":4556:4562   */\n      dup3\n        /* \"#utility.yul\":4551:4554   */\n      dup3\n        /* \"#utility.yul\":4544:4563   */\n      mstore\n        /* \"#utility.yul\":4596:4600   */\n      0x20\n        /* \"#utility.yul\":4591:4594   */\n      dup3\n        /* \"#utility.yul\":4587:4601   */\n      add\n        /* \"#utility.yul\":4572:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4438:4607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4613:4709   */\n    tag_125:\n        /* \"#utility.yul\":4650:4657   */\n      0x00\n        /* \"#utility.yul\":4679:4703   */\n      tag_167\n        /* \"#utility.yul\":4697:4702   */\n      dup3\n        /* \"#utility.yul\":4679:4703   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4668:4703   */\n      swap1\n      pop\n        /* \"#utility.yul\":4613:4709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4715:4805   */\n    tag_129:\n        /* \"#utility.yul\":4749:4756   */\n      0x00\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4785:4798   */\n      iszero\n        /* \"#utility.yul\":4778:4799   */\n      iszero\n        /* \"#utility.yul\":4767:4799   */\n      swap1\n      pop\n        /* \"#utility.yul\":4715:4805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4811:4937   */\n    tag_168:\n        /* \"#utility.yul\":4848:4855   */\n      0x00\n        /* \"#utility.yul\":4888:4930   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4881:4886   */\n      dup3\n        /* \"#utility.yul\":4877:4931   */\n      and\n        /* \"#utility.yul\":4866:4931   */\n      swap1\n      pop\n        /* \"#utility.yul\":4811:4937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5183   */\n    tag_120:\n        /* \"#utility.yul\":5175:5176   */\n      0x00\n        /* \"#utility.yul\":5172:5173   */\n      dup1\n        /* \"#utility.yul\":5165:5177   */\n      revert\n        /* \"#utility.yul\":5189:5350   */\n    tag_135:\n        /* \"#utility.yul\":5329:5342   */\n      0x2173747261746567697374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5325:5326   */\n      0x00\n        /* \"#utility.yul\":5317:5323   */\n      dup3\n        /* \"#utility.yul\":5313:5327   */\n      add\n        /* \"#utility.yul\":5306:5343   */\n      mstore\n        /* \"#utility.yul\":5189:5350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5356:5581   */\n    tag_140:\n        /* \"#utility.yul\":5496:5530   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5492:5493   */\n      0x00\n        /* \"#utility.yul\":5484:5490   */\n      dup3\n        /* \"#utility.yul\":5480:5494   */\n      add\n        /* \"#utility.yul\":5473:5531   */\n      mstore\n        /* \"#utility.yul\":5565:5573   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5560:5562   */\n      0x20\n        /* \"#utility.yul\":5552:5558   */\n      dup3\n        /* \"#utility.yul\":5548:5563   */\n      add\n        /* \"#utility.yul\":5541:5574   */\n      mstore\n        /* \"#utility.yul\":5356:5581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5587:5769   */\n    tag_145:\n        /* \"#utility.yul\":5727:5761   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5723:5724   */\n      0x00\n        /* \"#utility.yul\":5715:5721   */\n      dup3\n        /* \"#utility.yul\":5711:5725   */\n      add\n        /* \"#utility.yul\":5704:5762   */\n      mstore\n        /* \"#utility.yul\":5587:5769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5775:5933   */\n    tag_150:\n        /* \"#utility.yul\":5915:5925   */\n      0x216d616e61676572000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5911:5912   */\n      0x00\n        /* \"#utility.yul\":5903:5909   */\n      dup3\n        /* \"#utility.yul\":5899:5913   */\n      add\n        /* \"#utility.yul\":5892:5926   */\n      mstore\n        /* \"#utility.yul\":5775:5933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5939:6061   */\n    tag_116:\n        /* \"#utility.yul\":6012:6036   */\n      tag_179\n        /* \"#utility.yul\":6030:6035   */\n      dup2\n        /* \"#utility.yul\":6012:6036   */\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6005:6010   */\n      dup2\n        /* \"#utility.yul\":6002:6037   */\n      eq\n        /* \"#utility.yul\":5992:6055   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6048:6049   */\n      dup1\n        /* \"#utility.yul\":6041:6053   */\n      revert\n        /* \"#utility.yul\":5992:6055   */\n    tag_180:\n        /* \"#utility.yul\":5939:6061   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f639604f4f81871354887d34cfea5898f7c370872f1a8370d8b19ccc2c0ce1664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_296": {
									"entryPoint": null,
									"id": 296,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_232": {
									"entryPoint": 449,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 457,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1825:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "7:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "301:832:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "350:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "322:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "331:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "318:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "318:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "314:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:33:4"
															},
															"nodeType": "YulIf",
															"src": "311:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "441:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "456:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "470:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "460:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "485:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "531:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "542:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "551:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "495:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "485:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "579:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "594:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "598:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "670:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "681:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "690:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "634:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "718:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "733:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "737:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "763:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "809:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "805:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "805:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "829:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "773:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "763:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "857:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "872:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "886:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "876:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "902:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "948:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "959:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "944:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "944:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "968:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "912:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "912:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "902:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "996:130:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1011:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1025:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1015:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1042:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1088:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1084:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1084:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1108:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1052:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1052:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1042:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "239:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "250:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "262:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "270:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "278:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "286:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "294:6:4",
														"type": ""
													}
												],
												"src": "156:977:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1179:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1189:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1205:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1199:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1172:6:4",
														"type": ""
													}
												],
												"src": "1139:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1304:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1286:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1275:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1247:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1257:7:4",
														"type": ""
													}
												],
												"src": "1220:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1377:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1392:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1377:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1349:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1359:7:4",
														"type": ""
													}
												],
												"src": "1322:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1560:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1454:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1577:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1800:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1812:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1766:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1791:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1773:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1763:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1763:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:43:4"
															},
															"nodeType": "YulIf",
															"src": "1753:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1736:5:4",
														"type": ""
													}
												],
												"src": "1700:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000ece38038062000ece8339818101604052810190620000379190620002a4565b620000576200004b620001c160201b60201c565b620001c960201b60201c565b60008060146101000a81548160ff02191690831515021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506200037f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200029e8162000365565b92915050565b600080600080600060a08688031215620002c357620002c262000360565b5b6000620002d3888289016200028d565b9550506020620002e6888289016200028d565b9450506040620002f9888289016200028d565b93505060606200030c888289016200028d565b92505060806200031f888289016200028d565b9150509295509295909350565b6000620003398262000340565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b62000370816200032c565b81146200037c57600080fd5b50565b610b3f806200038f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c7b9d53011610066578063c7b9d53014610216578063d92f3d7314610232578063f2fde38b1461024e578063fbfa77cf1461026a576100f5565b8063715018a6146101b4578063748747e6146101be5780638da5cb5b146101da578063aced1661146101f8576100f5565b8063257ae0de116100d3578063257ae0de14610152578063573fef0a146101705780635c975abb1461017a5780636817031b14610198576100f5565b8063182b102f146100fa5780631fe4a686146101165780632358af5414610134575b600080fd5b610114600480360381019061010f9190610847565b610288565b005b61011e6102d4565b60405161012b919061091e565b60405180910390f35b61013c6102fa565b604051610149919061091e565b60405180910390f35b61015a610320565b604051610167919061091e565b60405180910390f35b610178610346565b005b610182610348565b60405161018f9190610939565b60405180910390f35b6101b260048036038101906101ad9190610847565b61035e565b005b6101bc6103aa565b005b6101d860048036038101906101d39190610847565b6103be565b005b6101e26104cf565b6040516101ef919061091e565b60405180910390f35b6102006104f8565b60405161020d919061091e565b60405180910390f35b610230600480360381019061022b9190610847565b61051e565b005b61024c60048036038101906102479190610847565b6105f2565b005b61026860048036038101906102639190610847565b61063e565b005b6102726106c2565b60405161027f919061091e565b60405180910390f35b6102906106e8565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b60008060149054906101000a900460ff16905090565b6103666106e8565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103b26106e8565b6103bc6000610766565b565b6103c66104cf565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061044c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61048b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610482906109b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610954565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105fa6106e8565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106466106e8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90610974565b60405180910390fd5b6106bf81610766565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f061082a565b73ffffffffffffffffffffffffffffffffffffffff1661070e6104cf565b73ffffffffffffffffffffffffffffffffffffffff1614610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610994565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061084181610af2565b92915050565b60006020828403121561085d5761085c610a23565b5b600061086b84828501610832565b91505092915050565b61087d816109e5565b82525050565b61088c816109f7565b82525050565b600061089f600b836109d4565b91506108aa82610a28565b602082019050919050565b60006108c26026836109d4565b91506108cd82610a51565b604082019050919050565b60006108e56020836109d4565b91506108f082610aa0565b602082019050919050565b60006109086008836109d4565b915061091382610ac9565b602082019050919050565b60006020820190506109336000830184610874565b92915050565b600060208201905061094e6000830184610883565b92915050565b6000602082019050818103600083015261096d81610892565b9050919050565b6000602082019050818103600083015261098d816108b5565b9050919050565b600060208201905081810360008301526109ad816108d8565b9050919050565b600060208201905081810360008301526109cd816108fb565b9050919050565b600082825260208201905092915050565b60006109f082610a03565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f2173747261746567697374000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f216d616e61676572000000000000000000000000000000000000000000000000600082015250565b610afb816109e5565b8114610b0657600080fd5b5056fea26469706673582212206f639604f4f81871354887d34cfea5898f7c370872f1a8370d8b19ccc2c0ce1664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xECE CODESIZE SUB DUP1 PUSH3 0xECE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2A4 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x1C1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x37F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x29E DUP2 PUSH3 0x365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2C3 JUMPI PUSH3 0x2C2 PUSH3 0x360 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D3 DUP9 DUP3 DUP10 ADD PUSH3 0x28D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x2E6 DUP9 DUP3 DUP10 ADD PUSH3 0x28D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x2F9 DUP9 DUP3 DUP10 ADD PUSH3 0x28D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x30C DUP9 DUP3 DUP10 ADD PUSH3 0x28D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x31F DUP9 DUP3 DUP10 ADD PUSH3 0x28D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x339 DUP3 PUSH3 0x340 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x370 DUP2 PUSH3 0x32C JUMP JUMPDEST DUP2 EQ PUSH3 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB3F DUP1 PUSH3 0x38F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC7B9D530 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xD92F3D73 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x26A JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x1F8 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x257AE0DE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x257AE0DE EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x573FEF0A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x198 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x182B102F EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x2358AF54 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x346 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x3BC PUSH1 0x0 PUSH2 0x766 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x4CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x44C JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x646 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BF DUP2 PUSH2 0x766 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x82A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x70E PUSH2 0x4CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x841 DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85D JUMPI PUSH2 0x85C PUSH2 0xA23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x86B DUP5 DUP3 DUP6 ADD PUSH2 0x832 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87D DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x88C DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F PUSH1 0xB DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AA DUP3 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 PUSH1 0x26 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CD DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 PUSH1 0x20 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F0 DUP3 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0x8 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x933 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x883 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96D DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F0 DUP3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x2173747261746567697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x216D616E61676572000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP2 EQ PUSH2 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x639604F4F81871354887D34CFEA5898F PUSH29 0x370872F1A8370D8B19CCC2C0CE1664736F6C6343000807003300000000 ",
							"sourceMap": "174:2735:3:-:0;;;1058:331;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1237:7:3;1228:6;;:16;;;;;;;;;;;;;;;;;;1267:11;1254:10;;:24;;;;;;;;;;;;;;;;;;1300:10;1288:9;;:22;;;;;;;;;;;;;;;;;;1328:6;1320:5;;:14;;;;;;;;;;;;;;;;;;1364:18;1344:17;;:38;;;;;;;;;;;;;;;;;;1058:331;;;;;174:2735;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:4:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:977::-;262:6;270;278;286;294;343:3;331:9;322:7;318:23;314:33;311:120;;;350:79;;:::i;:::-;311:120;470:1;495:64;551:7;542:6;531:9;527:22;495:64;:::i;:::-;485:74;;441:128;608:2;634:64;690:7;681:6;670:9;666:22;634:64;:::i;:::-;624:74;;579:129;747:2;773:64;829:7;820:6;809:9;805:22;773:64;:::i;:::-;763:74;;718:129;886:2;912:64;968:7;959:6;948:9;944:22;912:64;:::i;:::-;902:74;;857:129;1025:3;1052:64;1108:7;1099:6;1088:9;1084:22;1052:64;:::i;:::-;1042:74;;996:130;156:977;;;;;;;;:::o;1220:96::-;1257:7;1286:24;1304:5;1286:24;:::i;:::-;1275:35;;1220:96;;;:::o;1322:126::-;1359:7;1399:42;1392:5;1388:54;1377:65;;1322:126;;;:::o;1577:117::-;1686:1;1683;1676:12;1700:122;1773:24;1791:5;1773:24;:::i;:::-;1766:5;1763:35;1753:63;;1812:1;1809;1802:12;1753:63;1700:122;:::o;174:2735:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1768,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_232": {
									"entryPoint": 2090,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1894,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@beforeDeposit_390": {
									"entryPoint": 838,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeBatchRecipient_261": {
									"entryPoint": 762,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@keeper_253": {
									"entryPoint": 1272,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1231,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_164": {
									"entryPoint": 840,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 938,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeBatchRecipient_385": {
									"entryPoint": 648,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setKeeper_327": {
									"entryPoint": 958,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStrategist_346": {
									"entryPoint": 1310,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnirouter_359": {
									"entryPoint": 1522,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVault_372": {
									"entryPoint": 862,
									"id": 372,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@strategist_255": {
									"entryPoint": 724,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1598,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unirouter_257": {
									"entryPoint": 800,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vault_259": {
									"entryPoint": 1730,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6064:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:4"
															},
															"nodeType": "YulIf",
															"src": "228:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:4",
														"type": ""
													}
												],
												"src": "152:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:4",
														"type": ""
													}
												],
												"src": "487:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "707:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "692:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "680:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "680:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "665:3:4",
														"type": ""
													}
												],
												"src": "611:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "948:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "953:2:4",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "889:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1054:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
																	"nodeType": "YulIdentifier",
																	"src": "965:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "965:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1078:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1067:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "860:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "868:3:4",
														"type": ""
													}
												],
												"src": "726:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1254:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1261:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1426:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1337:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1450:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1232:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1240:3:4",
														"type": ""
													}
												],
												"src": "1098:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1692:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1633:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1798:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1709:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1811:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1822:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1827:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1818:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1604:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1612:3:4",
														"type": ""
													}
												],
												"src": "1470:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1998:73:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2069:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2005:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:66:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67",
																	"nodeType": "YulIdentifier",
																	"src": "2080:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2182:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2193:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2182:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1976:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1984:3:4",
														"type": ""
													}
												],
												"src": "1842:365:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2321:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2333:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2329:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2321:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2357:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2283:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2306:4:4",
														"type": ""
													}
												],
												"src": "2213:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2555:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2551:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2543:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2617:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2641:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2579:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2579:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2505:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2517:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2528:4:4",
														"type": ""
													}
												],
												"src": "2441:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2861:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2846:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2838:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2885:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2896:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2881:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2881:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2904:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2874:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2874:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2930:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3064:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2938:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2930:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2808:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2823:4:4",
														"type": ""
													}
												],
												"src": "2657:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3263:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3263:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3489:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3355:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3233:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3248:4:4",
														"type": ""
													}
												],
												"src": "3082:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3678:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3688:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3746:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3754:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3760:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3780:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3914:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3788:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3658:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3673:4:4",
														"type": ""
													}
												],
												"src": "3507:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4103:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4113:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4125:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4113:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4160:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4171:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4156:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4179:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4185:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4149:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4205:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4339:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4213:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4083:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4098:4:4",
														"type": ""
													}
												],
												"src": "3932:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4397:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4407:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4417:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4390:6:4",
														"type": ""
													}
												],
												"src": "4357:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4534:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4551:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4556:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4544:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4544:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4591:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4572:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4506:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4511:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4522:11:4",
														"type": ""
													}
												],
												"src": "4438:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4668:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4697:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4679:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4668:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4640:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4650:7:4",
														"type": ""
													}
												],
												"src": "4613:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4757:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4767:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4785:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4785:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4778:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4778:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4767:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4739:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4749:7:4",
														"type": ""
													}
												],
												"src": "4715:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4856:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4866:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4888:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4866:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4838:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4848:7:4",
														"type": ""
													}
												],
												"src": "4811:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5032:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5042:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4943:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5155:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5172:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5175:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5165:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5066:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5295:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5317:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5325:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:14:4"
																	},
																	{
																		"hexValue": "2173747261746567697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5329:13:4",
																		"type": "",
																		"value": "!strategist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5306:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:37:4"
														}
													]
												},
												"name": "store_literal_in_memory_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5287:6:4",
														"type": ""
													}
												],
												"src": "5189:161:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5484:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5492:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5480:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5496:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5473:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5473:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5552:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5560:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5565:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5454:6:4",
														"type": ""
													}
												],
												"src": "5356:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5693:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5715:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5723:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5727:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5704:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5685:6:4",
														"type": ""
													}
												],
												"src": "5587:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5881:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5903:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5911:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5899:14:4"
																	},
																	{
																		"hexValue": "216d616e61676572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5915:10:4",
																		"type": "",
																		"value": "!manager"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5892:34:4"
														}
													]
												},
												"name": "store_literal_in_memory_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5873:6:4",
														"type": ""
													}
												],
												"src": "5775:158:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5982:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6039:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6048:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6051:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6041:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6041:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6041:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6005:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6030:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6012:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6012:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:43:4"
															},
															"nodeType": "YulIf",
															"src": "5992:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5975:5:4",
														"type": ""
													}
												],
												"src": "5939:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd(memPtr) {\n\n        mstore(add(memPtr, 0), \"!strategist\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67(memPtr) {\n\n        mstore(add(memPtr, 0), \"!manager\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c7b9d53011610066578063c7b9d53014610216578063d92f3d7314610232578063f2fde38b1461024e578063fbfa77cf1461026a576100f5565b8063715018a6146101b4578063748747e6146101be5780638da5cb5b146101da578063aced1661146101f8576100f5565b8063257ae0de116100d3578063257ae0de14610152578063573fef0a146101705780635c975abb1461017a5780636817031b14610198576100f5565b8063182b102f146100fa5780631fe4a686146101165780632358af5414610134575b600080fd5b610114600480360381019061010f9190610847565b610288565b005b61011e6102d4565b60405161012b919061091e565b60405180910390f35b61013c6102fa565b604051610149919061091e565b60405180910390f35b61015a610320565b604051610167919061091e565b60405180910390f35b610178610346565b005b610182610348565b60405161018f9190610939565b60405180910390f35b6101b260048036038101906101ad9190610847565b61035e565b005b6101bc6103aa565b005b6101d860048036038101906101d39190610847565b6103be565b005b6101e26104cf565b6040516101ef919061091e565b60405180910390f35b6102006104f8565b60405161020d919061091e565b60405180910390f35b610230600480360381019061022b9190610847565b61051e565b005b61024c60048036038101906102479190610847565b6105f2565b005b61026860048036038101906102639190610847565b61063e565b005b6102726106c2565b60405161027f919061091e565b60405180910390f35b6102906106e8565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b60008060149054906101000a900460ff16905090565b6103666106e8565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103b26106e8565b6103bc6000610766565b565b6103c66104cf565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061044c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61048b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610482906109b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610954565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105fa6106e8565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106466106e8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90610974565b60405180910390fd5b6106bf81610766565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f061082a565b73ffffffffffffffffffffffffffffffffffffffff1661070e6104cf565b73ffffffffffffffffffffffffffffffffffffffff1614610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610994565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061084181610af2565b92915050565b60006020828403121561085d5761085c610a23565b5b600061086b84828501610832565b91505092915050565b61087d816109e5565b82525050565b61088c816109f7565b82525050565b600061089f600b836109d4565b91506108aa82610a28565b602082019050919050565b60006108c26026836109d4565b91506108cd82610a51565b604082019050919050565b60006108e56020836109d4565b91506108f082610aa0565b602082019050919050565b60006109086008836109d4565b915061091382610ac9565b602082019050919050565b60006020820190506109336000830184610874565b92915050565b600060208201905061094e6000830184610883565b92915050565b6000602082019050818103600083015261096d81610892565b9050919050565b6000602082019050818103600083015261098d816108b5565b9050919050565b600060208201905081810360008301526109ad816108d8565b9050919050565b600060208201905081810360008301526109cd816108fb565b9050919050565b600082825260208201905092915050565b60006109f082610a03565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f2173747261746567697374000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f216d616e61676572000000000000000000000000000000000000000000000000600082015250565b610afb816109e5565b8114610b0657600080fd5b5056fea26469706673582212206f639604f4f81871354887d34cfea5898f7c370872f1a8370d8b19ccc2c0ce1664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC7B9D530 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xD92F3D73 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x26A JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x1F8 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x257AE0DE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x257AE0DE EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x573FEF0A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x198 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x182B102F EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x2358AF54 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x346 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x3BC PUSH1 0x0 PUSH2 0x766 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x4CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x44C JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x646 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BF DUP2 PUSH2 0x766 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x82A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x70E PUSH2 0x4CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x841 DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85D JUMPI PUSH2 0x85C PUSH2 0xA23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x86B DUP5 DUP3 DUP6 ADD PUSH2 0x832 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87D DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x88C DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F PUSH1 0xB DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AA DUP3 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 PUSH1 0x26 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CD DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 PUSH1 0x20 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F0 DUP3 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0x8 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x933 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x883 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96D DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F0 DUP3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x2173747261746567697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x216D616E61676572000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP2 EQ PUSH2 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x639604F4F81871354887D34CFEA5898F PUSH29 0x370872F1A8370D8B19CCC2C0CE1664736F6C6343000807003300000000 ",
							"sourceMap": "174:2735:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;589:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2863:44;;;:::i;:::-;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2381::3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1678:90:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;562:21:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1907:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;650:20:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2597:132;1094:13:0;:11;:13::i;:::-;2704:18:3::1;2684:17;;:38;;;;;;;;;;;;;;;;;;2597:132:::0;:::o;589:25::-;;;;;;;;;;;;;:::o;676:32::-;;;;;;;;;;;;;:::o;620:24::-;;;;;;;;;;;;;:::o;2863:44::-;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2381::3:-;1094:13:0;:11;:13::i;:::-;2452:6:3::1;2444:5;;:14;;;;;;;;;;;;;;;;;;2381:84:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1678:90:3:-;1503:7;:5;:7::i;:::-;1489:21;;:10;:21;;;:45;;;;1528:6;;;;;;;;;;;1514:20;;:10;:20;;;1489:45;1481:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1754:7:::1;1745:6;;:16;;;;;;;;;;;;;;;;;;1678:90:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;562:21:3:-;;;;;;;;;;;;;:::o;1907:152::-;1992:10;;;;;;;;;;;1978:24;;:10;:24;;;1970:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2041:11;2028:10;;:24;;;;;;;;;;;;;;;;;;1907:152;:::o;2185:100::-;1094:13:0;:11;:13::i;:::-;2268:10:3::1;2256:9;;:22;;;;;;;;;;;;;;;;;;2185:100:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;650:20:3:-;;;;;;;;;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:366::-;868:3;889:67;953:2;948:3;889:67;:::i;:::-;882:74;;965:93;1054:3;965:93;:::i;:::-;1083:2;1078:3;1074:12;1067:19;;726:366;;;:::o;1098:::-;1240:3;1261:67;1325:2;1320:3;1261:67;:::i;:::-;1254:74;;1337:93;1426:3;1337:93;:::i;:::-;1455:2;1450:3;1446:12;1439:19;;1098:366;;;:::o;1470:::-;1612:3;1633:67;1697:2;1692:3;1633:67;:::i;:::-;1626:74;;1709:93;1798:3;1709:93;:::i;:::-;1827:2;1822:3;1818:12;1811:19;;1470:366;;;:::o;1842:365::-;1984:3;2005:66;2069:1;2064:3;2005:66;:::i;:::-;1998:73;;2080:93;2169:3;2080:93;:::i;:::-;2198:2;2193:3;2189:12;2182:19;;1842:365;;;:::o;2213:222::-;2306:4;2344:2;2333:9;2329:18;2321:26;;2357:71;2425:1;2414:9;2410:17;2401:6;2357:71;:::i;:::-;2213:222;;;;:::o;2441:210::-;2528:4;2566:2;2555:9;2551:18;2543:26;;2579:65;2641:1;2630:9;2626:17;2617:6;2579:65;:::i;:::-;2441:210;;;;:::o;2657:419::-;2823:4;2861:2;2850:9;2846:18;2838:26;;2910:9;2904:4;2900:20;2896:1;2885:9;2881:17;2874:47;2938:131;3064:4;2938:131;:::i;:::-;2930:139;;2657:419;;;:::o;3082:::-;3248:4;3286:2;3275:9;3271:18;3263:26;;3335:9;3329:4;3325:20;3321:1;3310:9;3306:17;3299:47;3363:131;3489:4;3363:131;:::i;:::-;3355:139;;3082:419;;;:::o;3507:::-;3673:4;3711:2;3700:9;3696:18;3688:26;;3760:9;3754:4;3750:20;3746:1;3735:9;3731:17;3724:47;3788:131;3914:4;3788:131;:::i;:::-;3780:139;;3507:419;;;:::o;3932:::-;4098:4;4136:2;4125:9;4121:18;4113:26;;4185:9;4179:4;4175:20;4171:1;4160:9;4156:17;4149:47;4213:131;4339:4;4213:131;:::i;:::-;4205:139;;3932:419;;;:::o;4438:169::-;4522:11;4556:6;4551:3;4544:19;4596:4;4591:3;4587:14;4572:29;;4438:169;;;;:::o;4613:96::-;4650:7;4679:24;4697:5;4679:24;:::i;:::-;4668:35;;4613:96;;;:::o;4715:90::-;4749:7;4792:5;4785:13;4778:21;4767:32;;4715:90;;;:::o;4811:126::-;4848:7;4888:42;4881:5;4877:54;4866:65;;4811:126;;;:::o;5066:117::-;5175:1;5172;5165:12;5189:161;5329:13;5325:1;5317:6;5313:14;5306:37;5189:161;:::o;5356:225::-;5496:34;5492:1;5484:6;5480:14;5473:58;5565:8;5560:2;5552:6;5548:15;5541:33;5356:225;:::o;5587:182::-;5727:34;5723:1;5715:6;5711:14;5704:58;5587:182;:::o;5775:158::-;5915:10;5911:1;5903:6;5899:14;5892:34;5775:158;:::o;5939:122::-;6012:24;6030:5;6012:24;:::i;:::-;6005:5;6002:35;5992:63;;6051:1;6048;6041:12;5992:63;5939:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "575800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beforeDeposit()": "189",
								"feeBatchRecipient()": "2582",
								"keeper()": "2603",
								"owner()": "2589",
								"paused()": "2596",
								"renounceOwnership()": "30421",
								"setFeeBatchRecipient(address)": "27010",
								"setKeeper(address)": "29147",
								"setStrategist(address)": "26914",
								"setUnirouter(address)": "27030",
								"setVault(address)": "27075",
								"strategist()": "2560",
								"transferOwnership(address)": "30813",
								"unirouter()": "2537",
								"vault()": "2602"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1237,
									"end": 1244,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1228,
									"end": 1244,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1267,
									"end": 1278,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1254,
									"end": 1278,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1300,
									"end": 1310,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1310,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1328,
									"end": 1334,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1325,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1320,
									"end": 1325,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1334,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1361,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1344,
									"end": 1361,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 268,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 276,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 278,
									"end": 284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 294,
									"end": 300,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 346,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 331,
									"end": 340,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 322,
									"end": 329,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 318,
									"end": 341,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 314,
									"end": 347,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 311,
									"end": 431,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 350,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 311,
									"end": 431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 470,
									"end": 471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 551,
									"end": 558,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 542,
									"end": 548,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 531,
									"end": 540,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 527,
									"end": 549,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 495,
									"end": 559,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 485,
									"end": 559,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 485,
									"end": 559,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 441,
									"end": 569,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 690,
									"end": 697,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 670,
									"end": 679,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 666,
									"end": 688,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 634,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 624,
									"end": 698,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 624,
									"end": 698,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 579,
									"end": 708,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 747,
									"end": 749,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 820,
									"end": 826,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 818,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 805,
									"end": 827,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 773,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 763,
									"end": 837,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 763,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 718,
									"end": 847,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 886,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 968,
									"end": 975,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 959,
									"end": 965,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 948,
									"end": 957,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 944,
									"end": 966,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 912,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 902,
									"end": 976,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 902,
									"end": 976,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 857,
									"end": 986,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1025,
									"end": 1028,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1108,
									"end": 1115,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1088,
									"end": 1097,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1106,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1116,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1116,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1126,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1275,
									"end": 1310,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1275,
									"end": 1310,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1399,
									"end": 1441,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1388,
									"end": 1442,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1442,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1442,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1577,
									"end": 1694,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1577,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1684,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1791,
									"end": 1796,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1766,
									"end": 1771,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1763,
									"end": 1798,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1802,
									"end": 1814,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 2909,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f639604f4f81871354887d34cfea5898f7c370872f1a8370d8b19ccc2c0ce1664736f6c63430008070033",
									".code": [
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "C7B9D530"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "C7B9D530"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "D92F3D73"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "FBFA77CF"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "748747E6"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "ACED1661"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "257AE0DE"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "257AE0DE"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "573FEF0A"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "6817031B"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "182B102F"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "1FE4A686"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "2358AF54"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 2909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 562,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 650,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2729,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 614,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2907,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1489,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1481,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1768,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 583,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 562,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2002,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1970,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2038,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2028,
											"end": 2038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 2059,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2285,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 670,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 650,
											"end": 670,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 882,
											"end": 956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 882,
											"end": 956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1633,
											"end": 1700,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1700,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1633,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1798,
											"end": 1801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1709,
											"end": 1802,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1709,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1811,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1811,
											"end": 1830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1836,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2064,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2005,
											"end": 2071,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2071,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2005,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 2207,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2357,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2528,
											"end": 2532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2569,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2569,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2579,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2651,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3064,
											"end": 3068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2938,
											"end": 3069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3069,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2938,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 3076,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3345,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3363,
											"end": 3494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3363,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3363,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3501,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4169,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4339,
											"end": 4343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4213,
											"end": 4344,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4344,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4213,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4351,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4600,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4591,
											"end": 4594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4607,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4697,
											"end": 4702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4679,
											"end": 4703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4679,
											"end": 4703,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4679,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4709,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4785,
											"end": 4798,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4778,
											"end": 4799,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4805,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4937,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5066,
											"end": 5183,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5066,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5350,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5189,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5342,
											"name": "PUSH",
											"source": 4,
											"value": "2173747261746567697374000000000000000000000000000000000000000000"
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5350,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5356,
											"end": 5581,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5356,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5530,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5581,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5587,
											"end": 5769,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5587,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5761,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5704,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5769,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5775,
											"end": 5933,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5775,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5915,
											"end": 5925,
											"name": "PUSH",
											"source": 4,
											"value": "216D616E61676572000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5911,
											"end": 5912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5909,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5926,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5933,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5939,
											"end": 6061,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5939,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6030,
											"end": 6035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5992,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5992,
											"end": 6055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6053,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5992,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5992,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 6061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 6061,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"beforeDeposit()": "573fef0a",
							"feeBatchRecipient()": "2358af54",
							"keeper()": "aced1661",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setFeeBatchRecipient(address)": "182b102f",
							"setKeeper(address)": "748747e6",
							"setStrategist(address)": "c7b9d530",
							"setUnirouter(address)": "d92f3d73",
							"setVault(address)": "6817031b",
							"strategist()": "1fe4a686",
							"transferOwnership(address)": "f2fde38b",
							"unirouter()": "257ae0de",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_unirouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeBatchRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beforeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBatchRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeBatchRecipient\",\"type\":\"address\"}],\"name\":\"setFeeBatchRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unirouter\",\"type\":\"address\"}],\"name\":\"setUnirouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unirouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"beforeDeposit()\":{\"details\":\"Function to synchronize balances before new user deposit. Can be overridden in the strategy.\"},\"constructor\":{\"details\":\"Initializes the base strategy.\",\"params\":{\"_feeBatchRecipient\":\"address where to send platform fees.\",\"_keeper\":\"address to use as alternative owner.\",\"_strategist\":\"address where strategist fees go.\",\"_unirouter\":\"router to use for swaps\",\"_vault\":\"address of parent vault.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFeeBatchRecipient(address)\":{\"details\":\"Updates beefy fee recipient.\",\"params\":{\"_feeBatchRecipient\":\"new platform fee recipient address.\"}},\"setKeeper(address)\":{\"details\":\"Updates address of the strat keeper.\",\"params\":{\"_keeper\":\"new keeper address.\"}},\"setStrategist(address)\":{\"details\":\"Updates address where strategist fee earnings will go.\",\"params\":{\"_strategist\":\"new strategist address.\"}},\"setUnirouter(address)\":{\"details\":\"Updates router that will be used for swaps.\",\"params\":{\"_unirouter\":\"new unirouter address.\"}},\"setVault(address)\":{\"details\":\"Updates parent vault.\",\"params\":{\"_vault\":\"new vault address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"keeper\":{\"details\":\"Contracts: {keeper} - Address to manage a few lower risk features of the strat {strategist} - Address of the strategy author/deployer where strategist fee will go. {vault} - Address of the vault that controls the strategy's funds. {unirouter} - Address of exchange to execute swaps.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Common/StratManager.sol\":\"StratManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Common/StratManager.sol\":{\"keccak256\":\"0xff880a2422a43580ea300c4f838aeec13c8e3e570fb2e2ff1fdd15e6ea2fa8e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c2fc2fff51313be8afc4fa708236d4d8caa3d4572f7f0946129d593d88955f10\",\"dweb:/ipfs/QmUyjYt1bAj2BsXak5Lzv6thdgqXGgMBpcnQvuUMZvdL4e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 253,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "keeper",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 255,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "strategist",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 257,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "unirouter",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 259,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "vault",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 261,
								"contract": "Common/StratManager.sol:StratManager",
								"label": "feeBatchRecipient",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 243,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								242
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 243,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								242
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 227,
												"id": 230,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 242,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 237,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 236,
												"id": 239,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 242,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"Common/StratManager.sol": {
				"ast": {
					"absolutePath": "Common/StratManager.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"StratManager": [
							391
						]
					},
					"id": 392,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 392,
							"sourceUnit": 113,
							"src": "64:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 392,
							"sourceUnit": 221,
							"src": "117:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 247,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "199:7:3"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:3"
								},
								{
									"baseName": {
										"id": 249,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "208:8:3"
									},
									"id": 250,
									"nodeType": "InheritanceSpecifier",
									"src": "208:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 391,
							"linearizedBaseContracts": [
								391,
								220,
								112,
								242
							],
							"name": "StratManager",
							"nameLocation": "183:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "223:334:3",
										"text": " @dev Contracts:\n {keeper} - Address to manage a few lower risk features of the strat\n {strategist} - Address of the strategy author/deployer where strategist fee will go.\n {vault} - Address of the vault that controls the strategy's funds.\n {unirouter} - Address of exchange to execute swaps."
									},
									"functionSelector": "aced1661",
									"id": 253,
									"mutability": "mutable",
									"name": "keeper",
									"nameLocation": "577:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "562:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 252,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1fe4a686",
									"id": 255,
									"mutability": "mutable",
									"name": "strategist",
									"nameLocation": "604:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "589:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "257ae0de",
									"id": 257,
									"mutability": "mutable",
									"name": "unirouter",
									"nameLocation": "635:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "620:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 256,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 259,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "665:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "650:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 258,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2358af54",
									"id": 261,
									"mutability": "mutable",
									"name": "feeBatchRecipient",
									"nameLocation": "691:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "676:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 260,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "676:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1218:171:3",
										"statements": [
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1228:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 276,
														"name": "_keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1237:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1228:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1228:16:3"
											},
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 279,
														"name": "strategist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "1254:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 280,
														"name": "_strategist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1267:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1254:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1254:24:3"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 283,
														"name": "unirouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1288:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 284,
														"name": "_unirouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1300:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1288:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "1288:22:3"
											},
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1320:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 288,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1328:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1320:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1320:14:3"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "feeBatchRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1344:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "_feeBatchRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "1364:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1344:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1344:38:3"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "715:338:3",
										"text": " @dev Initializes the base strategy.\n @param _keeper address to use as alternative owner.\n @param _strategist address where strategist fees go.\n @param _unirouter router to use for swaps\n @param _vault address of parent vault.\n @param _feeBatchRecipient address where to send platform fees."
									},
									"id": 296,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "_keeper",
												"nameLocation": "1087:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1079:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_strategist",
												"nameLocation": "1112:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1104:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "_unirouter",
												"nameLocation": "1141:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1133:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "1169:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1161:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_feeBatchRecipient",
												"nameLocation": "1193:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1185:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:148:3"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:0:3"
									},
									"scope": 391,
									"src": "1058:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1471:94:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 299,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1489:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1489:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 301,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "1503:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1503:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1489:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 304,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1514:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1514:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 306,
																	"name": "keeper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1528:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1514:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1489:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "216d616e61676572",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1536:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67",
																"typeString": "literal_string \"!manager\""
															},
															"value": "!manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d649ec84ef7f6f9041461728f89423e9a28995fb09d4368e3ac8eb8640ff9e67",
																"typeString": "literal_string \"!manager\""
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1481:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1481:66:3"
											},
											{
												"id": 312,
												"nodeType": "PlaceholderStatement",
												"src": "1557:1:3"
											}
										]
									},
									"id": 314,
									"name": "onlyManager",
									"nameLocation": "1457:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:2:3"
									},
									"src": "1448:117:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1735:33:3",
										"statements": [
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1745:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 323,
														"name": "_keeper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1754:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1745:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1745:16:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1571:102:3",
										"text": " @dev Updates address of the strat keeper.\n @param _keeper new keeper address."
									},
									"functionSelector": "748747e6",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 319,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "1723:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1723:11:3"
										}
									],
									"name": "setKeeper",
									"nameLocation": "1687:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_keeper",
												"nameLocation": "1705:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1697:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:17:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1735:0:3"
									},
									"scope": 391,
									"src": "1678:90:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1960:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 334,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1978:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1978:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 336,
																"name": "strategist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1992:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1978:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2173747261746567697374",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
																"typeString": "literal_string \"!strategist\""
															},
															"value": "!strategist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
																"typeString": "literal_string \"!strategist\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1970:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1970:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1970:48:3"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "strategist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2028:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "_strategist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2041:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2028:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2028:24:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1774:128:3",
										"text": " @dev Updates address where strategist fee earnings will go.\n @param _strategist new strategist address."
									},
									"functionSelector": "c7b9d530",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStrategist",
									"nameLocation": "1916:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_strategist",
												"nameLocation": "1938:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1930:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:21:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:0:3"
									},
									"scope": 391,
									"src": "1907:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2246:39:3",
										"statements": [
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 354,
														"name": "unirouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2256:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 355,
														"name": "_unirouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2268:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2256:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2256:22:3"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "2065:115:3",
										"text": " @dev Updates router that will be used for swaps.\n @param _unirouter new unirouter address."
									},
									"functionSelector": "d92f3d73",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 351,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2236:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2236:9:3"
										}
									],
									"name": "setUnirouter",
									"nameLocation": "2194:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "_unirouter",
												"nameLocation": "2215:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2207:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:20:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:0:3"
									},
									"scope": 391,
									"src": "2185:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2434:31:3",
										"statements": [
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 367,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "2444:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2452:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2444:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2444:14:3"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2291:85:3",
										"text": " @dev Updates parent vault.\n @param _vault new vault address."
									},
									"functionSelector": "6817031b",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 365,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 364,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2424:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2424:9:3"
										}
									],
									"name": "setVault",
									"nameLocation": "2390:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "2407:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2399:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:16:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:0:3"
									},
									"scope": 391,
									"src": "2381:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2674:55:3",
										"statements": [
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "feeBatchRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2684:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 381,
														"name": "_feeBatchRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2704:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2684:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2684:38:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2471:121:3",
										"text": " @dev Updates beefy fee recipient.\n @param _feeBatchRecipient new platform fee recipient address."
									},
									"functionSelector": "182b102f",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2664:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2664:9:3"
										}
									],
									"name": "setFeeBatchRecipient",
									"nameLocation": "2606:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_feeBatchRecipient",
												"nameLocation": "2635:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2627:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:28:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2674:0:3"
									},
									"scope": 391,
									"src": "2597:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2905:2:3",
										"statements": []
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2735:123:3",
										"text": " @dev Function to synchronize balances before new user deposit.\n Can be overridden in the strategy."
									},
									"functionSelector": "573fef0a",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beforeDeposit",
									"nameLocation": "2872:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2885:2:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2905:0:3"
									},
									"scope": 391,
									"src": "2863:44:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 392,
							"src": "174:2735:3",
							"usedErrors": []
						}
					],
					"src": "39:2870:3"
				},
				"id": 3
			}
		}
	}
}